generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Roles {
  Chair
  Manager
  Reviewer
  Author
}

enum SubmissionStatus {
  Accepted
  Rejected
  Pending
}

model User {
  id       String           @id @default(auto()) @map("_id") @db.ObjectId
  username String
  roles    RolesConnector[]
}

model Conference {
  id     String           @id @default(auto()) @map("_id") @db.ObjectId
  name   String
  roles  RolesConnector[]
  domain Domain[]
}

model RolesConnector {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  userId       String     @db.ObjectId
  conferenceId String     @db.ObjectId
  user         User       @relation(fields: [userId], references: [id])
  conference   Conference @relation(fields: [conferenceId], references: [id])
  role         Roles      @default(Author)
}

model Domain {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  conferenceId String     @db.ObjectId
  conference   Conference @relation(fields: [conferenceId], references: [id])
  submission   Submission[]
}

model Submission {
  id     String           @id @default(auto()) @map("_id") @db.ObjectId
  Status SubmissionStatus @default(Pending)

  domainId String @db.ObjectId
  domain   Domain @relation(fields: [domainId], references: [id])

  filesMeataData FilesMetaData[]
}

model FilesMetaData {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  filename String
  ext      String

  submissionId String @db.ObjectId
  submission  Submission @relation(fields: [submissionId], references: [id])
}
