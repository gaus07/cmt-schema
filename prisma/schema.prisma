generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Roles {
  Chair
  Manager
  Reviewer
  Author
}

enum SubmissionStatus {
  Accepted
  Rejected
  Pending
}

model User {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  username          String
  email             String @unique @db.String
  password          String @db.String
  first_name        String @db.String
  last_name         String @db.String
  organization_name String @db.String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roles RolesConnector[]
}

model Conference {
  id                        String   @id @default(auto()) @map("_id") @db.ObjectId
  name                      String
  description               String
  country                   String   @db.String
  state                     String   @db.String
  start_date                DateTime @db.Timestamp
  end_date                  DateTime @db.Timestamp
  paper_submission_due_date DateTime @db.Timestamp
  enternal_conf_URL         String   @db.String
  created_by                String   @db.ObjectId

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  roles  RolesConnector[]
  domain Domain[]
}

model RolesConnector {
  id           String     @id @default(auto()) @map("_id") @db.ObjectId
  userId       String     @db.ObjectId
  conferenceId String     @db.ObjectId
  user         User       @relation(fields: [userId], references: [id])
  conference   Conference @relation(fields: [conferenceId], references: [id])
  role         Roles      @default(Author)
}

model Domain {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  conferenceId String       @db.ObjectId
  conference   Conference   @relation(fields: [conferenceId], references: [id])
  submission   Submission[]
}

model Submission {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  from_domain String @db.String
  title       String @db.String
  abstract    String @db.String
  contact     String @db.String
  country     String @db.String
  state       String @db.String
  comment     String @db.String
  email       String @db.String

  createdAt DateTime @default(now()) @db.Timestamp
  updatedAt DateTime @updatedAt @db.Timestamp

  Status SubmissionStatus @default(Pending)

  domainId String @db.ObjectId
  domain   Domain @relation(fields: [domainId], references: [id])

  fileMeataData FileMetaData[]
}

model FileMetaData {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  filename String
  ext      String

  submissionId String     @db.ObjectId
  submission   Submission @relation(fields: [submissionId], references: [id])
}
